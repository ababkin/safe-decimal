sudo: false

# Do not choose a language; we provide our own build tools.
language: generic

cache:
  directories:
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/.stack-work
  timeout: 360

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.

  - env: BUILD=stack ARGS="--resolver lts-8.24 --stack-yaml stack-doctests.yaml" DOCTESTS_DISABLED=true
    compiler: ": #stack GHC-8.0.2 (lts-8.24)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: BUILD=stack ARGS="--resolver lts-9.21 --stack-yaml stack-doctests.yaml" DOCTESTS_DISABLED=true
    compiler: ": #stack GHC-8.0.2 (lts-9.21)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: BUILD=stack ARGS="--resolver lts-11.22 --stack-yaml stack-doctests.yaml"
    compiler: ": #stack GHC-8.2.2 (lts-11.22)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: BUILD=stack ARGS="--resolver lts-12.14 --haddock --no-haddock-deps"
    compiler: ": #stack GHC-8.4.3 (lts-12.14)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: BUILD=stack ARGS="--resolver lts-12.26 --haddock --no-haddock-deps"
    compiler: ": #stack GHC-8.4.4 (lts-12.26)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: BUILD=stack ARGS="--resolver lts-13.9 --haddock --no-haddock-deps"
    compiler: ": #stack GHC-8.6.3 (lts-13.9)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: BUILD=stack ARGS="--resolver lts-13.19 --haddock --no-haddock-deps"
    compiler: ": #stack GHC-8.6.4 (lts-13.19)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: BUILD=stack ARGS="--resolver lts-13.30 --haddock --no-haddock-deps"
    compiler: ": #stack GHC-8.6.5 (lts-13.30)"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: BUILD=stack ARGS="--resolver lts-14 --haddock --no-haddock-deps"
    compiler: ": #stack GHC-8.6.5 (lts-14)"
    addons:
      apt:
        packages: [libgmp-dev]

  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS="--resolver nightly --haddock --no-haddock-deps"
    compiler: ": #stack nightly"
    addons:
      apt:
        packages: [libgmp-dev]

  - env: BUILD=stack ARGS="--resolver lts-11.22 --haddock --no-haddock-deps"
    compiler: ": #stack GHC-8.2.2 (lts-11.22)"
    os: osx

  - env: BUILD=stack ARGS="--resolver lts-12.26 --haddock --no-haddock-deps"
    compiler: ": #stack GHC-8.4.4 (lts-12.26)"
    os: osx

  - env: BUILD=stack ARGS="--resolver lts-14 --haddock --no-haddock-deps"
    compiler: ": #stack GHC-8.6.5 (lts-14)"
    os: osx

  allow_failures:
  - env: BUILD=stack ARGS="--resolver nightly --haddock --no-haddock-deps"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of packages when building on GHC HEAD
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  # restore file modification times, so only changed modules get rebuilt
  git ls-tree -r --name-only HEAD | while read filename; do
    TS="$(git log -1 --format="%ct" -- ${filename})"
    touch "${filename}" -mt "$(date --date="@$TS" "+%Y%m%d%H%M.%S")"
  done

  if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    travis_retry curl -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

script:
- |
  set -ex
  if [ -n "${COVERALLS_STACK_YAML}" ] && [ -n "${COVERALLS_REPO_TOKEN}" ]; then
     stack --stack-yaml $COVERALLS_STACK_YAML test Color:tests --coverage
     stack --stack-yaml $COVERALLS_STACK_YAML hpc report --all
     travis_retry curl -L https://github.com/lehins/stack-hpc-coveralls/releases/download/0.0.5.0/shc.tar.gz | tar xz shc
     STACK_YAML="$COVERALLS_STACK_YAML" ./shc --repo-token=$COVERALLS_REPO_TOKEN combined custom
     if [ -z "$DOCTESTS_DISABLED" ]; then
       stack $ARGS $DOCTEST_ARGS test Color:doctests
     fi
  else
    if [ -z "$DOCTESTS_DISABLED" ]; then
      stack $ARGS $DOCTEST_ARGS test --bench --no-run-benchmarks
    else
      stack $ARGS $DOCTEST_ARGS test Color:tests
    fi
  fi
  set +ex
